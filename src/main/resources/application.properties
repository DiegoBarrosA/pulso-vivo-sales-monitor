# Application Configuration
spring.application.name=rabbitmqavanzado
server.port=8090

# Disable Spring Security for local development (AWS API Gateway handles auth in production)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

# OCI Autonomous Warehouse Database Configuration
spring.datasource.url=jdbc:oracle:thin:@pulsovivodbclean_high?tns_admin=./wallet
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=ADMIN
spring.datasource.password=tktauglwhmhkgwmuqxhmA/1

# JPA/Hibernate Configuration
# Updated for Hibernate 6.x compatibility
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# Disable SSL server DN matching for OCI Autonomous Warehouse
spring.datasource.hikari.data-source-properties.oracle.net.ssl_server_dn_match=no

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true

# RabbitMQ Configuration for Docker
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=10000
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.initial-interval=2000
spring.rabbitmq.listener.simple.retry.multiplier=2
spring.rabbitmq.listener.simple.retry.max-interval=10000

# Logging Configuration
logging.level.cl.duoc=DEBUG
logging.level.org.springframework.amqp=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=INFO
logging.level.root=INFO

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info,metrics,rabbitmq
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.health.rabbit.enabled=true

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Server Configuration
server.error.include-message=always
server.error.include-binding-errors=always

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false

# Service Integration Configuration
inventory.service.url=http://pulso-vivo-inventory-service:8081
inventory.service.timeout=5000

# Price Monitoring Configuration
price.monitoring.enabled=true
price.monitoring.scan-interval=30000
price.monitoring.change-threshold=5.0
price.monitoring.notification-enabled=true